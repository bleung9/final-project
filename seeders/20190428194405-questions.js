'use strict';

let neighborhoods = ['Waterfront Communities-The Island',
                        'Bay Street Corridor',
                        'Church-Yonge Corridor',
                        'Moss Park',
                        'North St.James Town',
                        'Cabbagetown-South St.James Town',
                        'Regent Park',
                        'South Riverdale',
                        'North Riverdale',
                        'Playter Estates-Danforth',
                        'Blake-Jones',
                        'Greenwood-Coxwell',
                        'Woodbine Corridor',
                        'The Beaches',
                        'East End-Danforth',
                        'Danforth',
                        'Danforth East York',
                        'Woodbine-Lumsden',
                        'Taylor-Massey',
                        'O \'Connor-Parkview',
                        'Old East York',
                        'Thorncliffe Park',
                        'Broadview North',
                        'Birchcliffe-Cliffside',
                        'Oakridge',
                        'Clairlea-Birchmount',
                        'Kennedy Park',
                        'Cliffcrest',
                        'Niagara',
                        'Roncesvalles',
                        'High Park-Swansea',
                        'South Parkdale',
                        'Mimicoludes Humber Bay Shores',
                        'Stonegate-Queensway',
                        'Trinity-Bellwoods',
                        'Little Portugal',
                        'Dufferin Grove',
                        'Palmerston-Little Italy',
                        'University',
                        'Kensington-Chinatown',
                        'Alderwood',
                        'Long Branch',
                        'New Toronto',
                        'Islington-City Centre West',
                        'Markland Wood',
                        'Etobicoke West Mall',
                        'Eringate-Centennial-West Deane',
                        'Princess-Rosethorn',
                        'Edenbridge-Humber Valley',
                        'Kingsway South',
                        'Lambton Baby Point',
                        'Runnymede-Bloor West Village',
                        'High Park North',
                        'Junction Area',
                        'Weston-Pellam Park',
                        'Dovercourt-Wallace Emerson-Junction',
                        'Corso Italia-Davenport',
                        'Wychwood',
                        'Casa Loma',
                        'Yonge-St.Clair',
                        'Annex',
                        'Rosedale-Moore Park',
                        'Leaside-Bennington',
                        'Mount Pleasant East',
                        'Mount Pleasant West',
                        'Yonge-Eglinton',
                        'Forest Hill South',
                        'Humewood-Cedarvale',
                        'Oakwood Village',
                        'Caledonia-Fairbank',
                        'Keelesdale-Eglinton West',
                        'Rockcliffe-Smythe',
                        'Brookhaven-Amesbury',
                        'Mount Dennis',
                        'Beechborough-Greenbrook',
                        'Briar Hill-Belgravia',
                        'Forest Hill North',
                        'Lawrence Park South',
                        'Lawrence Park North',
                        'Bedford Park-Nortown',
                        'Englemount-Lawrence',
                        'Yorkdale-Glen Park',
                        'Maple Leaf',
                        'Rustic',
                        'Pelmo Park-Humberlea',
                        'Weston',
                        'Humber Heights-Westmount',
                        'Kingsview Village-The Westway',
                        'Willowridge-Martingrove-Richview',
                        'West Humber-Clairville',
                        'Rexdale-Kipling',
                        'Elms-Old Rexdale',
                        'Thistletown-Beaumond Heights',
                        'Mount Olive-Silverstone-Jamestown',
                        'Humber Summit',
                        'Humbermede',
                        'Black Creek',
                        'Glenfield-Jane Heights',
                        'Downsview-Roding-CFB',
                        'York University Heights',
                        'Bathurst Manor',
                        'Westminster-Branson',
                        'Clanton Park',
                        'Lansing-Westgate',
                        'Willowdale West',
                        'Newtonbrook West',
                        'Newtonbrook East',
                        'Willowdale East',
                        'St.Andrew-Windfields',
                        'Bridle Path-Sunnybrook-York Mills',
                        'Banbury-Don Mills',
                        'Flemingdon Park',
                        'Victoria Village',
                        'Parkwoods-Donalda',
                        'Don Valley Village',
                        'Bayview Village',
                        'Bayview Woods-Steeles',
                        'Hillcrest Village',
                        'Pleasant View',
                        'Henry Farm',
                        'Wexford/Maryvale',
                        'Dorset Park',
                        'Ionview',
                        'Bendale',
                        'Eglinton East',
                        'Scarborough Village',
                        'Guildwood',
                        'Morningside',
                        'Woburn',
                        'Centennial Scarborough',
                        'West Hill',
                        'Highland Creek',
                        'Rouge',
                        'L\'Amoreaux',
                        'Steeles',
                        'Milliken',
                        'Agincourt North',
                        'Tam O\'Shanter-Sullivan',
                        'Agincourt South-Malvern West',
                        'Malvern'];

module.exports = {
  up: (queryInterface, Sequelize) => {
    let to_insert = [ { question: "What is your MBTI personality?", 
                        answers: ["ISTJ", "ISFJ", "INFJ", "INTJ", "ISTP", "ISFP", "INFP", "INTP", "ESTP", "ESFP", "ENFP", "ENTP", "ESTJ", "ESFJ", "ENFJ", "ENTJ"], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "Do you smoke (Y/N)", answers: ["y", "n"], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "Do you mind pets? (Y/N)", answers: ["y", "n"], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "Are you a night owl? (Y/N)", answers: ["y", "n"], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "Do you mind living with someone of the opposite gender? (Y/N)", answers: ["y", "n"], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "Do you prefer to have the house at a hot or cold temperature? (H/C)", answers: ["h", "c"], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "On a scale of 1-10, how important is it that your space is always kept clean?", answers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "On a scale of 1-10, how much do you mind that your roommate frequently has frds/SO over?", answers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "On a scale of 1-10, how much do you like Pikachu?", answers: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "On a scale of 1-10, how much did you like Avengers: Endgame?", answers: ["y", "n"], createdAt: new Date(), updatedAt: new Date() }, 
                      { question: "What neighborhood do you want to live in?", answers: neighborhoods, createdAt: new Date(), updatedAt: new Date() } ];
    return queryInterface.bulkInsert('Questions', to_insert, {});
  },

  down: (queryInterface, Sequelize) => {
    return queryInterface.bulkDelete('Questions', null, {});
  }
};
